@Library('app-java-sharedlib') _
import org.example.BuildHelper 

pipeline {
    agent { label ip-10-0-0-236.ec2.internal} 

    environment {
        DOCKERHUB_CREDS = credentials('dockerhub-creds')
        GITHUB_CREDS = credentials('github-creds')
        IMAGE_NAME = "${DOCKERHUB_CREDS_USR}/java-app"
        TAG = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
    }

    tools { maven 'M3' }
    
    stages {
        stage('Checkout') {
            steps { checkout scm }
        }

        stage('Print Agent') {
          steps {
            sh 'docker version'
            echo "Running on agent: ${env.NODE_NAME}"
            sh 'hostname'
          }
        }

        stage('Build & Package') {
            steps {
                script {
                    helper = new BuildHelper(this)
                    helper.runBuild(true) // skipIfNoTests = true
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    helper.buildDockerImage(env.IMAGE_NAME, env.TAG)
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    helper.pushDockerImage(env.IMAGE_NAME, env.TAG, 'dockerhub-creds')
                }
            }
        }
        stage('Update Deployment Manifest') {
            steps {
                script {
                    helper.updateDeploymentManifest("k8s/deployment.yaml", env.IMAGE_NAME, env.TAG)
                }
            }
        }
    }

    post {
        always {
            script { helper.cleanupDocker() }
        }
        success {
            echo "Pushed ${IMAGE_NAME}:${TAG} and ${IMAGE_NAME}:latest"
        }
        failure {
            echo "Build or push failed"
        }
    }
}
